@model eRecruitment.Sita.Web.Models.VacancyModels
@{
    ViewBag.Title = "Add";
}

@using System.Data.Linq
@using Microsoft.AspNet.Identity
@{
    eRecruitment.Sita.Web.App_Data.DAL.eRecruitmentDataClassesDataContext _db =
        new eRecruitment.Sita.Web.App_Data.DAL.eRecruitmentDataClassesDataContext();
}
<head>
    @*<script src="~/Content/eRecruit/bootstrap-multiselect.js"></script>
        <link href="~/Content/eRecruit/bootstrap-multiselect.css" rel="stylesheet" />
        <script src="~/Scripts/jquery-1.10.2.min.js"></script>
        <script src="~/Content/assets/js/jquery-ui.min.js"></script>*@

    <script src="http://code.jquery.com/jquery-1.12.4.min.js"></script>
    <link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css"
          rel="stylesheet" type="text/css" />
    <script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js"></script>
    <link href="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/css/bootstrap.min.css"
          rel="stylesheet" type="text/css" />
    <script src="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>

    <script type="text/javascript">
        var j = jQuery.noConflict();
        j(function () {
            j('#VacancyQuestionID').multiselect({
                includeSelectAllOption: true
            });
        });


    </script>

</head>


<body>
    @*<div class="col-md-6" id="Alert">*@

    @*<div class="box box-default">*@
    @*<div class="box-header with-border">
            <i class="fa fa-warning"></i>
            @*<h3 class="box-title">Alerts</h3>
        </div>*@
    <!-- /.box-header -->

    <section class="content-header">
        <h1>
            &nbsp;
            @*Blank page*@
            @*<small>it all starts here</small>*@
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="#">Upload Vacancy</a></li>
            <li class="active">Add Vacancy</li>
        </ol>


    </section>
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->

        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">Add Vacancy</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>

            </div>

            <div class="box-body">
                @using (Html.BeginForm("Add", "Vacancy", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data", id = "savevacancy" }))
            {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-md-6">
                            @*<div class="form-group">
                                    @Html.LabelFor(m => m.ReferenceNo, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-12">
                                        <label>Reference Number</label>
                                        @Html.TextBoxFor(m => m.ReferenceNo, new { @class = "form-control", placeholder = "Reference Number", tabindex = 1 })
                                    </div>
                                </div>*@
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Vacancy Name/Job Title<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(m => m.VacancyProfileID, new SelectList(ViewBag.VacancyProfile, "VacancyProfileID", "VacancyName"), "--Select Vacancy Name--", new { @class = "form-control", required = "Required", tabindex = 1 })
                                    @*@Html.TextBoxFor(m => m.EmploymentTypeID, new { @class = "form-control" })*@
                                </div>
                            </div>

                            @*<div class="form-group">
                                @Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })
                                <div class="col-md-12">
                                    <label>Job Title</label>
                                    @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control", placeholder = "Job Title", tabindex = 3 })
                                </div>
                            </div>*@

                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Job Level<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(m => m.JobLevelID, new SelectList(ViewBag.JobLevel, "JobLevelID", "Descr"), "--Select Job Level--", new { @class = "form-control", onchange = "SelectedIndexChanged()", id = "JobLevelID", required = "Required", tabindex = 9 })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Organisation<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(m => m.OrganisationID, new SelectList(ViewBag.Organisation, "OrganisationID", "OrganisationName"), "--Select Organisation Type--", new { @class = "form-control", required = "Required",tabindex = 3 })


                                    @*@Html.TextBoxFor(m => m.Organisation, new { @class = "form-control", placeholder = "Organisation", tabindex = 5 })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Division<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(m => m.DivisionID, new SelectList(ViewBag.Division, "DivisionID", "DivisionDiscription"), "--Select Division Type--", new { @class = "form-control", required = "Required", tabindex = 4 })
                                    @*@Html.TextBoxFor(m => m.Organisation, new { @class = "form-control", placeholder = "Organisation", tabindex = 5 })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Recruiter<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(m => m.Recruiter, new { @class = "form-control", placeholder = "Recruiter", required = "Required", tabindex = 5 })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Recruiter's Email Address<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(m => m.RecruiterEmail, new { @class = "form-control", placeholder = "Recruiter's Email Address", required = "Required",tabindex = 6 })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Recruiter's Telephone Number<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(m => m.RecruiterTel, new { @maxLength = "10", @class = "form-control", placeholder = "Recruiter's Telephone Number", required = "Required", tabindex = 6, onkeypress = "return isNumberKey(event)" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @*<div class="form-group">
                                    @Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-12">
                                        <label>Position</label>
                                        @Html.TextBoxFor(m => m., new { @class = "form-control", placeholder = "Position", tabindex = 7 })
                                    </div>
                                </div>*@
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Reports To<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(m => m.Manager, new { @class = "form-control", placeholder = "Manager", required = "Required",tabindex = 7 })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Department<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(m => m.DepartmentID, new SelectList(ViewBag.SitaDepartment, "DepartmentID", "DepartmentDiscription"), "--Select Department --", new { @class = "form-control", required = "Required",tabindex = 8 })

                                    @*@Html.TextBoxFor(m => m.EmploymentTypeID, new { @class = "form-control" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Employment Type<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(m => m.EmploymentTypeID, new SelectList(ViewBag.EmploymentType, "EmploymentTypeID", "EmploymentType"), "--Select Employment Type--", new { @class = "form-control", onchange = "SelectedIndexChanged()", id = "EmploymentTypeID", required = "Required",tabindex = 9 })

                                    @*@Html.TextBoxFor(m => m.EmploymentTypeID, new { @class = "form-control" })*@
                                </div>
                            </div>
                            <div class="form-group" id="ConD">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Contract Duration</label>
                                    @Html.TextBoxFor(m => m.ContractDuration, new {@class = "form-control", placeholder = "Contract Duration", tabindex = 10 })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>SR Level</label>
                                    @Html.TextBoxFor(m => m.SalaryRange, new { @class = "form-control", placeholder = "SR Level", @readonly = "readonly",tabindex = 11 })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Closing Date<span class="required" style="color:red;"> * </span></label>
                                    @Html.EditorFor(m => m.ClosingDate, new { htmlAttributes = new {@id = "ClosingDate", @class = "form-control datepicker", @type = "date", placeholder = "Closing Date", required = "Required", onchange = "datediff()", tabindex = 12} })
                                    @*@Html.EditorFor(m => m.ClosingDate, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @id = "ClosingDate", @class = "form-control", @type = "date", placeholder = "Closing Date", required = "Required", onchange = "datediff()", tabindex = 12} })*@
                                </div>
                            </div>     
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Number Of Openings<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(m => m.NumberOfOpenings, new { @class = "form-control", placeholder = "Number Of Openings", required = "Required", onkeypress = "return isNumberKey(event)", tabindex = 13 })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Vacancy Type<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(m => m.VancyTypeID, new SelectList(ViewBag.VacancyType, "VancyTypeID", "VacancyTypeName"), "--Select Vacancy Type--", new { @class = "form-control", onchange = "SelectedIndexChanged()", id = "VancyTypeID", required = "Required", tabindex = 9 })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
              
                        <div class="col-md-12">
                            <label>Location<span class="required" style="color:red;"> * </span></label>
                            @Html.TextBoxFor(m => m.Location, new { @class = "form-control", placeholder = "Location", required = "Required",tabindex = 14 })
                        </div>
                        <div class="col-md-12">
                            <label>Purpose of the Job</label>
                            @Html.TextAreaFor(m => m.VacancyPurpose, new { @class = "form-control", @rows = "3", placeholder = "Purpose of the Job", @readonly = "readonly", required = "Required" ,tabindex = 15 })
                        </div>
                        <div class="col-md-12">
                            <label>Responsibilities</label>
                            @Html.TextAreaFor(m => m.Responsibility, new { @class = "form-control", @rows = "3", placeholder = "Responsibilities of the Job", @readonly = "readonly", required = "Required" ,tabindex = 16 })
                        </div>
                        <div class="col-md-12">
                            <label>Qualifications And Experience</label>
                            @Html.TextAreaFor(m => m.QualificationsandExperience, new { @class = "form-control", @rows = "3", placeholder = "Qualifications and Experience required for the Job", @readonly = "readonly", required = "Required",tabindex = 17 })
                        </div>
                        <div class="col-md-12">
                            <label>Technical Competencies Description</label>
                            @Html.TextAreaFor(m => m.TechnicalCompetenciesDescription, new { @class = "form-control", @rows = "3", placeholder = "Technical Competencies Description", @readonly = "readonly", required = "Required",tabindex = 18 })
                        </div>
                        <div class="col-md-12">
                            <label>Additional Requirements</label>
                            @Html.TextAreaFor(m => m.OtherSpecialRequirements, new { @class = "form-control", @rows = "3", placeholder = "Additional Requirements for the Job", @readonly = "readonly", required = "Required",tabindex = 19 })
                        </div>
                        <div class="col-md-12">
                            <label>Disclaimer</label>
                            @Html.TextAreaFor(m => m.Disclaimer, new { @class = "form-control", @rows = "3", placeholder = "Disclaimer", required = "Required", @readonly = "readonly", tabindex = 20 })
                        </div>
                        <div class="col-md-12">
                            <label>Attach Supporting Document<span class="required" style="color:red;"> * </span></label>
                            <input type="file" class="form-control-file" accept="image/gif, image/jpeg, application/pdf" name="postedFile" id="postedFile" required="Required" />
                        </div>
                        <div class="clearfix"></div><br />
                        <div class="col-md-12">
                            <div class="box box-warning">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Question Banks<span class="required" style="color:red;"> * </span></h3>
                                </div>
                                <!-- /.box-header -->
                                <div class="box-body">
                                    @if (ViewBag.QuetionBanks != null)
                                    {
                                        foreach (var d in ViewBag.QuetionBanks)
                                        {
                                            <div class="checkbox">
                                                <label>
                                                    <input type="checkbox"
                                                           name="VacancyQuestionID"
                                                           value="@d.QuestionID" /> @d.QuestionDesc
                                                    </label>
                                                </div>
                                        }
                                    }
                                </div>
                                <!-- /.box-body -->
                            </div>
                        </div>


                        <div class="clearfix"></div><br />
                        <div class="col-md-12 pull-right">
                            <input type="submit" class="btn btn-success" value="Save" />
                            |
                            <a href="@Url.Action("Index", "Vacancy" , new { id = User.Identity.GetUserId() })" onclick="return confirm('Are you sure you want to cancel?')" type="button" class="btn btn-danger">
                                Cancel
                            </a>
                        </div>
                    </div>
                }

            </div>
            <!-- /.box-body -->
            <div class="box-footer">
                &nbsp;
            </div>
            <!-- /.modal -->
            <!-- /.box-footer-->
        </div>

        @*Date Validation*@
        <div class="modal fade" id="modal-warning" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title" id="myModalLabel"> Message</h4>
                    </div>
                    <div class="modal-body">
                        <p>Closing Date Cannot Be In The Past. Please Select Future Date.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-success" data-dismiss="modal">Close</button>
                    </div>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>

        <!-- /.box -->
    </section>
    <!-- /.content -->

</body>

<script>
    $(document).ready(function () {
        $("#ConD").hide();

        //$("#ClosingDate").datepicker({
        //    format: 'dd/mm/yyyy',
        //    startDate: new Date(),
        //}).on('changeDate', function (e) {
        //    $(this).datepicker('hide');
        //});
    });

    function isNumberKey(evt) {
        //var e = evt || window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode
        if (charCode != 46 && charCode > 31
        && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }

    function ValidateAlpha(evt) {
        var keyCode = (evt.which) ? evt.which : evt.keyCode
        if ((keyCode < 65 || keyCode > 90) && (keyCode < 97 || keyCode > 123) && keyCode != 32)

            return false;
        return true;
    }
</script>
<script type="text/javascript">
    $('#VacancyProfileID').change(function () {
        //alert(" Ok");
            var vacancyProfile = $("#VacancyProfileID").val();
            var vacancyPurpose = $('#VacancyPurpose');
            var TechnicalCompetenciesDescription = $('#TechnicalCompetenciesDescription');
            var Responsibility = $('#Responsibility');
            var QualificationsandExperience = $('#QualificationsandExperience');
            var OtherSpecialRequirements = $('#OtherSpecialRequirements');
            var Disclaimer = $('#Disclaimer');

            $("#VacancyPurpose").val(null);
            $("#TechnicalCompetenciesDescription").val(null);
            $("#Responsibility").val(null);
            $("#QualificationsandExperience").val(null);
            $("#OtherSpecialRequirements").val(null);
            $("#Disclaimer").val(null);
            $("#TechnicalCompetenciesDescription").val(null);

            if (vacancyProfile != null && vacancyProfile != '') {
                $.getJSON('@Url.Action("GetVacancyDetailsByID")',
                    { vid: vacancyProfile }, function (data) {
                        if (data != null && !jQuery.isEmptyObject(data)) {
                            //console.log("Data: " + data);
                            $("#VacancyPurpose").val(data[0].VacancyPurpose);
                            $("#TechnicalCompetenciesDescription").val(data[0].TechnicalCompetenciesDescription);
                            $("#Responsibility").val(data[0].Responsibility);
                            $("#QualificationsandExperience").val(data[0].QualificationsandExperience);
                            $("#OtherSpecialRequirements").val(data[0].OtherSpecialRequirements);
                            $("#Disclaimer").val(data[0].Disclaimer);
                            $("#TechnicalCompetenciesDescription").val(data[0].TechnicalCompetenciesDescription);

                      }
                        else
                        {
                            $("#VacancyPurpose").val("Purpose of the Job");
                        };

                  });
            }
    });

    $('#JobLevelID').change(function () {
        var jobLevel = $("#JobLevelID").val();
        var salaryRange = $('#SalaryRange');

        $("#SalaryRangeID").val(null);

        if (jobLevel != null && jobLevel != '') {
            $.getJSON('@Url.Action("GetSalaryRangeByID")',
                { vid: jobLevel }, function (data) {
                    if (data != null && !jQuery.isEmptyObject(data)) {
                        $("#SalaryRange").val(data[0].SalaryRange);

                    }
                    else {
                        $("#SalaryRange").val("Salary Range");
                    };

                });
        }
    });
</script>
<script>
    function datediff() {


        var selectedText = document.getElementById("ClosingDate").value;
        var selectedDate = new Date(selectedText);
        var now = new Date();
        if (selectedDate < now) {
            //$('#modal-warning').modal('show')
            document.getElementById('ClosingDate').value = '';
            alert("Closing Date Cannot Be In The Past. Please Select Future Date.");
           
        }
    }
</script>












