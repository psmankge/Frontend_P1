@model IEnumerable<eRecruitment.Sita.Web.Models.ProfileModel>

@using Microsoft.AspNet.Identity;
@using System.Data.Linq
@{
    eRecruitment.Sita.Web.App_Data.DAL.eRecruitmentDataClassesDataContext _db =
        new eRecruitment.Sita.Web.App_Data.DAL.eRecruitmentDataClassesDataContext();
    eRecruitmentDataAccess _dal = new eRecruitmentDataAccess(); 
}
<section class="content-header">
    <h1>
        &nbsp;
        @*Profile*@
        @*<small>it all starts here</small>*@
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="#">My Career Center</a></li>
        <li class="active">User Profile</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="box">
        <div class="box-header with-border">
            <h3 class="box-title">Profile</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                        title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" disabled title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <section class="content">
                <div class="row">
                    <div class="col-md-3">
                        <!-- Profile Image -->
                        <div class="box box-primary">
                            <div class="box-body box-profile">
                                <img class="profile-user-img img-responsive img-circle" src="~/Content/dist/img/user4-128x128.jpg" alt="User profile picture">
                                @{ 
                                    string userid = User.Identity.GetUserId();
                                    var data = _db.tblProfiles.Where(x => x.UserID == userid).FirstOrDefault();
                                    string Fullname = string.Format("{0} {1}",data.FirstName,data.Surname);
                                    string Address = string.Format("{0}, {1}", data.ComplexName, data.City);
                                }
                                <h3 class="profile-username text-center">@Fullname</h3>
                                @*<p class="text-muted text-center">Software Engineer</p>*@
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                        <!-- About Me Box -->
                        <div class="box box-primary">
                            <div class="box-header with-border">
                                <h3 class="box-title">About Me</h3>
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">
                                <strong><i class="fa fa-book margin-r-5"></i> Education</strong>
                                <p class="text-muted">
                                    @{ 
                                        string uid = User.Identity.GetUserId();
                                        var qual = (from a in _db.tblCandidateEducations
                                                    join b in _db.tblProfiles on a.ProfileID equals b.pkProfileID
                                                    join c in _db.lutQualificationTypes on a.QualificationTypeID equals c.QualificationTypeID
                                                    where b.UserID == uid
                                                    orderby a.QualificationTypeID descending
                                                    select new
                                                    {
                                                        QualificationType = c.QualificationTypeName,
                                                        InstitutionName = a.InstitutionName,
                                                        QualificationName = a.QualificationName
                                                    }).Take(1);

                                    }
                                    @if (qual != null)
                                    {
                                        foreach (var q in qual)
                                        {
                                            string qualname = string.Format("{0} from the University of {1}", @q.QualificationName, @q.InstitutionName);
                                            <div> @qualname</div>
                                        }
                                    }
                                </p>
                                <hr>
                                <strong><i class="fa fa-map-marker margin-r-5"></i> Location</strong>
                                <p class="text-muted">@Address</p>
                                <hr>
                                <strong><i class="fa fa-pencil margin-r-5"></i> Skills</strong>
                                <p>
                                    @{ 
                                        var skillsData = from a in _db.tblSkillsProfiles
                                                     join b in _db.lutSkills on a.skillID equals b.skillID
                                                     join c in _db.tblProfiles on a.profileID equals c.pkProfileID
                                                     where c.UserID == userid
                                                     select new
                                                     {
                                                         SkillName = b.skillName
                                                     };

                                        var skills = skillsData.ToList();
                                    }
                                    @if (skills != null)
                                    {
                                        foreach (var d in skills)
                                        {
                                            <span class="label label-success">@d.SkillName</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="label label-danger">No Skills Added</span>
                                    }

                                    @*<span class="label label-danger">UI Design</span>
                                    <span class="label label-success">Coding</span>
                                    <span class="label label-info">Javascript</span>
                                    <span class="label label-warning">PHP</span>
                                    <span class="label label-primary">Node.js</span>*@
                                </p>
                                @*<hr>
                                <strong><i class="fa fa-file-text-o margin-r-5"></i> Notes</strong>
                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam fermentum enim neque.</p>*@
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                    <!-- /.col -->
                    <div class="col-md-9">
                        <div id="tab" class="nav-tabs-custom">
                            <ul class="nav nav-tabs">
                                @*@if (ViewBag.TabPage != null)
                                {
                                    if (ViewBag.TabPage == "activity".ToString())
                                    {
                                        <li class="active"><a href="#activity" data-toggle="tab">Personal Information</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="#activity" data-toggle="tab" data-ta>Personal Information</a></li>
                                    }
                                    if (ViewBag.TabPage == "timeline".ToString())
                                    {
                                        <li class="active"><a href="#timeline" data-toggle="tab">Education History</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="#timeline" data-toggle="tab">Education History</a></li>
                                    }
                                }*@
                                <li class="active"><a href="#activity" data-toggle="tab">Personal Information</a></li>
                                <li><a  href="#timeline" data-toggle="tab">Education History</a></li>
                                <li><a href="#settings" data-toggle="tab">Working History</a></li>
                                <li><a href="#skills" data-toggle="tab">Skills</a></li>
                                <li><a href="#languages" data-toggle="tab">Languages</a></li>
                                <li><a href="#references" data-toggle="tab">References</a></li>
                                <li><a href="#attachments" data-toggle="tab">Attachments</a></li>
                            </ul>
                            <div class="tab-content">
                                <div class="tab-pane active" id="activity">
                                    <!-- Post -->
                                    @using (Html.BeginForm("UpdateProfile", "CareerCenter", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data", role = "form" }))
                                    {

                                        foreach (var item in Model)
                                        {
                                            <div class="form-group">
                                                <label for="inputName" class="col-sm-2 control-label">ID Number<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.IDNumber, null, new { @class = "form-control", @readonly = "readonly", placeholder = "Enter Id Number", required = "required", value = "", onkeypress = "return isNumberKey(event)" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputSurname" class="col-sm-2 control-label">Surname<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.Surname, null, new { @class = "form-control", placeholder = "Enter surname", @readonly = "readonly", required = "required", value = "", onKeyPress = "return ValidateAlpha(event);" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputName" class="col-sm-2 control-label">First Name<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.FirstName, null, new { @id = "FirstName", @readonly = "readonly", @class = "form-control", placeholder = "Enter Name", required = "required", value = "", onKeyPress = "return ValidateAlpha(event);" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-2 control-label" for="date01">Date of Birth<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.EditorFor(i => item.DateOfBirth, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control datepicker", @readonly = "readonly", @type = "date", placeholder = "Date of Birth", tabindex = 7 } })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputRace" class="col-sm-2 control-label">Race<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(m => item.fkRaceID, new SelectList(ViewBag.Race, "RaceID", "RaceName", item.fkRaceID, "--Select Race--"), new { @class = "form-control", required = "required", value = "" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputGender" class="col-sm-2 control-label">Gender<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(m => item.fkGenderID, new SelectList(ViewBag.Gender, "GenderID", "Gender", item.fkGenderID, "--Select Gender--"), new { @class = "form-control", @readonly = "readonly", required = "required", value = "" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputContactNo" class="col-sm-2 control-label">Contact No<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.CellNo, null, new { @id = "CellNo", @class = "form-control", @readonly = "readonly", placeholder = "Enter contactNo", required = "required", value = "", onkeypress = "return isNumberKey(event)" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputAlternative" class="col-sm-2 control-label">Alternative Contact No</label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.AlternativeNo, null, new { @id = "AlternativeNo", @class = "form-control", placeholder = "Enter Alternative Contact No", required = "required", value = "", onkeypress = "return isNumberKey(event)" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputEmail" class="col-sm-2 control-label">Email<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.EmailAddress, null, new { @id = "EmailAddress", @class = "form-control", @readonly = "readonly", placeholder = "Enter Email", required = "required", value = "", type = "email" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputUnitNo" class="col-sm-2 control-label">Unit No<span class="required"></span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.UnitNo, null, new { @id = "UnitNo", @class = "form-control", placeholder = "Enter Unit No", value = "" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputComplex" class="col-sm-2 control-label">Complex<span class="required"></span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.ComplexName, null, new { @id = "ComplexName", @class = "form-control", placeholder = "Enter Complex", value = "", onKeyPress = "return ValidateAlpha(event);" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputStreetNo" class="col-sm-2 control-label">Street No<span class="required"></span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.StreetNo, null, new { @id = "StreetNo", @class = "form-control", placeholder = "Enter Street No", value = "", onkeypress = "return isNumberKey(event)" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputStreetName" class="col-sm-2 control-label">Street Name<span class="required"></span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.StreetName, null, new { @id = "StreetName", @class = "form-control", placeholder = "Enter Street Name", value = "", onKeyPress = "return ValidateAlpha(event);" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputSuburb" class="col-sm-2 control-label">Suburb<span class="required"></span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.SuburbName, null, new { @id = "SuburbName", @class = "form-control", placeholder = "Enter Suburb", value = "", onKeyPress = "return ValidateAlpha(event);" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputCity" class="col-sm-2 control-label">City<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.City, null, new { @id = "City", @class = "form-control", placeholder = "Enter City", required = "required", value = "", onKeyPress = "return ValidateAlpha(event);" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputProvince" class="col-sm-2 control-label">Province<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @*@Html.DropDownListFor(m => item.fkProvinceID, new SelectList(ViewBag.Province, "ProvinceID", "ProvinceName", item.fkProvinceID, "---Select Province---"), new { @class = "form-control", required = "required", value = "" })*@
                                                    @Html.DropDownListFor(m => item.fkProvinceID, new SelectList(ViewBag.Province, "ProvinceID", "ProvinceName", item.fkProvinceID, "--Select Province--"), new { @class = "form-control", required = "required" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputPostalCode" class="col-sm-2 control-label">Postal Code<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.PostalCode, null, new { @id = "postalCode", @class = "form-control", placeholder = "Enter Postal Code", required = "required", value = "", onkeypress = "return isNumberKey(event)" })
                                                </div>
                                            </div>
                                            <hr>
                                         
                                            <div class="form-group">
                                                <label for="inputDisability" class="col-sm-2 control-label">Disability<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(m => item.fkDisabilityID, new SelectList(ViewBag.YesorNo, "AnswerID", "Answer", item.fkDisabilityID, "---Select....---"), new { @class = "form-control", required = "required", value = "" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputDisabilityDetails" class="col-sm-2 control-label">Disability Details<span class="required"></span></label>
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(m => item.NatureOfDisability, new SelectList(ViewBag.Disability, "DisabilityID", "Disability", item.NatureOfDisability, "---Select Nature Of Disability...---"), new { @class = "form-control", required = "required", value = "", onKeyPress = "return ValidateAlpha(event);" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputRSACitizen" class="col-sm-2 control-label">RSA Citizen<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(m => item.SACitizen, new SelectList(ViewBag.YesorNo, "AnswerID", "Answer", item.SACitizen, "---Select....---"), new { @class = "form-control", required = "required", value = "" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputCitizen" class="col-sm-2 control-label">If No, Nationality<span class="required"></span></label>
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(m => item.fkNationalityID, new SelectList(ViewBag.Country, "CountryID", "CountryName", item.fkNationalityID, "---Select Language....---"), new { @class = "form-control", required = "required", value = "" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputWorkPermit" class="col-sm-2 control-label">Valid Work Permit<span class="required"></span></label>
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(m => item.fkWorkPermitID, new SelectList(ViewBag.YesorNo, "AnswerID", "Answer", item.fkWorkPermitID, "---Select....---"), new { @class = "form-control", required = "required", value = "" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputCriminalOffense" class="col-sm-2 control-label">Work Permit Number<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.WorkPermitNo, null, new { @id = "WorkPermitNo", @class = "form-control", placeholder = "Work Permit Number", required = "required", value = "", onkeypress = "return isNumberKey(event)" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputCriminalOffense" class="col-sm-2 control-label">Criminal Offence or Dismissed Form Employment<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(m => item.pkCriminalOffenseID, new SelectList(ViewBag.YesorNo, "AnswerID", "Answer", item.pkCriminalOffenseID, "---Select....---"), new { @class = "form-control", required = "required", value = "" })
                                                </div>
                                            </div>
                                            <hr>
                                            <div class="form-group">
                                                <label for="inputLanguageForCorrespondence" class="col-sm-2 control-label">Preferred Language For Correspondence<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.DropDownListFor(m => item.fkLanguageForCorrespondenceID, new SelectList(ViewBag.Language, "LanguageID", "LanguageName", item.fkLanguageForCorrespondenceID, "---Select Language....---"), new { @class = "form-control", required = "required", value = "" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputTelNoDuringWorkingHours" class="col-sm-2 control-label">Telephone No During Working Hours<span class="required"></span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.TelNoDuringWorkingHours, null, new { @id = "TelNoDuringWorkingHours", @class = "form-control", placeholder = "Enter Telephone No During Working Hours", value = "", onkeypress = "return isNumberKey(event)" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputWayForCorrespondance" class="col-sm-2 control-label">Preferred Way Of Correspondence<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @*@Html.TextBoxFor(i => item.WayForCorrespondance, null, new { @id = "WayForCorrespondance", @class = "form-control", placeholder = "Email or Phone Call", required = "required", value = "", onKeyPress = "return ValidateAlpha(event);" })*@
                                                    @Html.DropDownListFor(m => item.MethodOfCommunicationID, new SelectList(ViewBag.CommunicationMethod, "MethodID", "MethodName", item.MethodOfCommunicationID, "--Select Method of Communication--"), new { @class = "form-control", required = "required" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputCorrespondanceDetails" class="col-sm-2 control-label">Correspondence Details<span class="required">*</span></label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(i => item.CorrespondanceDetails, null, new { @id = "CorrespondanceDetails", @class = "form-control", placeholder = "Enter Correspondance Details", required = "required", value = "" })
                                                </div>
                                            </div>
                                            <hr>
                                            <div class="form-group">
                                                <label for="inputCVUpload" class="col-sm-2 control-label">Upload CV</label>
                                                <div class="col-sm-10">
                                                    <input class="input-file uniform_on" id="postedCV" name="postedCV" type="file">
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="inputIDUpload" class="col-sm-2 control-label">Upload ID</label>
                                                <div class="col-sm-10">
                                                    <input class="input-file uniform_on" id="postedID" name="postedID" type="file">
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-sm-offset-2 col-sm-10">
                                                    <div class="checkbox">
                                                        <label>
                                                            <input type="checkbox" name="TermsAndCondition" id="TermsAndCondition"> I agree to the <a href="#">terms and conditions</a>
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-sm-offset-2 col-sm-10">
                                                    <button type="submit" id="btnPersonalInfo" class="btn btn-primary" disabled value="Submit">Submit</button>
                                                </div>
                                            </div>
                                        }
                                    }
                                    <!-- /.post -->
                                    <!-- Post -->
                                    <!-- /.post -->
                                    <!-- Post -->
                                    <!-- /.post -->

                                </div>

                                <!-- /.tab-pane -->
                                <div class="tab-pane" id="timeline">
                                    <div id="getEduTable">
                                        @{
                                            if (@ViewBag.Education.Count == 0)
                                            {
                                                Html.RenderAction("AddEducation", "CareerCenter");
                                            }
                                            else
                                            {
                                                Html.RenderAction("getEducation", "CareerCenter");
                                            }
                                        }
                                    </div>
                                </div>
                                
                                <!-- /.tab-pane -->
                                <div class="tab-pane" id="settings">
                                    <div id="getWorkTable">
                                        @{
                                            if (@ViewBag.WorkHistory.Count == 0)
                                            {
                                                Html.RenderAction("AddWorkHistory", "CareerCenter");
                                            }
                                            else
                                            {
                                                Html.RenderAction("getWorkHistory", "CareerCenter");
                                            }

                                        }
                                    </div>
                                </div>
                                    
                                    <!-- /.tab-pane -->
                                    <!-- /.tab-pane -->
                                    <div class="tab-pane" id="skills">
                                        <div id="getSkillTable">
                                            @{
                                                if (@ViewBag.SkillsForProfile.Count == 0)
                                                {
                                                    Html.RenderAction("AddSkills", "CareerCenter");
                                                }
                                                else
                                                {
                                                    Html.RenderAction("getSkills", "CareerCenter");
                                                }

                                            }
                                        </div>
                                    </div>

                                    <!-- /.tab-pane -->
                                    <div class="tab-pane" id="languages">
                                        <div id="getLanguageTable">
                                            @{
                                                if (@ViewBag.LanguagesForProfile.Count == 0)
                                                {
                                                    Html.RenderAction("AddLanguages", "CareerCenter");
                                                }
                                                else
                                                {
                                                    Html.RenderAction("getLanguages", "CareerCenter");
                                                }

                                            }
                                        </div>
                                    </div>

                                    <!-- /.tab-pane -->
                                    <div class="tab-pane" id="references">
                                        <div id="getReferenceTable">
                                            @{
                                                if (@ViewBag.References.Count == 0)
                                                {
                                                    Html.RenderAction("AddReferences", "CareerCenter");
                                                }
                                                else
                                                {
                                                    Html.RenderAction("getReferences", "CareerCenter");
                                                }

                                            }
                                        </div>
                                    </div>

                                    <!-- /.tab-pane -->
                                    <!-- /.tab-pane -->
                                    <div class="tab-pane" id="attachments">
                                        <div id="getAttachmentTable">
                                            @{
                                                if (@ViewBag.References.Count == 0)
                                                {
                                                    Html.RenderAction("AddAttachments", "CareerCenter");
                                                }
                                                else
                                                {
                                                    Html.RenderAction("getAttachments", "CareerCenter");
                                                }

                                            }
                                        </div>
                                    </div>
                                    <!-- /.tab-pane -->
                                </div>
                            <!-- /.tab-content -->
                        </div>
                        <!-- /.nav-tabs-custom -->
                    </div>
                    <!-- /.col -->
                </div>
                <!-- /.row -->
            </section>
        </div>
        <!-- /.box-body -->
        <div class="box-footer">
            SITA
        </div>
        <!-- /.box-footer-->
    </div>
    <!-- /.box -->
</section>


<script>
    $('#TermsAndCondition').change(function () {
        if ($('#TermsAndCondition').is(":checked"))
        {
            $(':input[type="submit"]').prop('disabled', false);
        } else { $(':input[type="submit"]').prop('disabled', true);}
    });

    //function EnableSubmitButton()
    //{

    //}
    function isNumberKey(evt) {
        //var e = evt || window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode
        if (charCode != 46 && charCode > 31
        && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }

    function ValidateAlpha(evt) {
        var keyCode = (evt.which) ? evt.which : evt.keyCode
        if ((keyCode < 65 || keyCode > 90) && (keyCode < 97 || keyCode > 123) && keyCode != 32)

            return false;
        return true;
    }
    function GetQualificationID(d) {
        document.getElementById("hdnQualificationID").value = d;
        $('hdnQualificationID').val(d);
        //alert(d);
    }
    function GetWorkHistoryID(d) {
        document.getElementById("hdnWorkHistoryID").value = d;
        $('hdnWorkHistoryID').val(d);
        //alert(d);
    }
    function GetReferenceID(d) {
        document.getElementById("hdnReferenceID").value = d;
        $('hdnReferenceID').val(d);
        //alert(d);
    }
    function myFunction() {$(function() {
        $('form.my_form').submit(function(event) {
            event.preventDefault(); // Prevent the form from submitting via the browser
            var form = $(this);
            $.ajax({
                type: form.attr('method'),
                url: form.attr('action'),
                data: form.serialize()
            }).done(function(data) {
                // Optionally alert the user of success here...
            }).fail(function(data) {
                // Optionally alert the user of an error here...
            });
        });
    });
    }
</script>
