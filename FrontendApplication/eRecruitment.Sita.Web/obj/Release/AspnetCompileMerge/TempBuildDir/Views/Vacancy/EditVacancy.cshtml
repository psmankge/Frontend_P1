@model IEnumerable<eRecruitment.Sita.Web.Models.VacancyModels>
@*@model eRecruitment.Sita.Web.Models.VacancyModels*@
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "EditVacancy";
}
@using System.Data.Linq
@{
    eRecruitment.Sita.Web.App_Data.DAL.eRecruitmentDataClassesDataContext _db =
        new eRecruitment.Sita.Web.App_Data.DAL.eRecruitmentDataClassesDataContext();
}
<section class="content-header">
    <h1>
        &nbsp;
        @*Blank page*@
        @*<small>it all starts here</small>*@
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="#">Vacancy</a></li>
        <li class="active">View Vacancy for Approval</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="box">
        <div class="box-header with-border">
            <h3 class="box-title">View Vacancy For Approval</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                        title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>


        <div class="box-body">
            @foreach (var item in Model)
            {
                using (Html.BeginForm("EditVacancy", "Vacancy", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-md-6">
                            @*<div class="form-group">
                                @Html.LabelFor(m => m.ReferenceNo, new { @class = "col-md-2 control-label" })
                                <div class="col-md-12">
                                    <label>Reference Number</label>
                                    @Html.TextBoxFor(Model => @item.ReferenceNo, new { @class = "form-control", placeholder = "Reference Number", required = "Required", tabindex = 1 })
                                </div>
                            </div>*@
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Vacancy Name<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(Model => @item.VacancyProfileID, new SelectList(ViewBag.VacancyProfile, "VacancyProfileID", "VacancyName", @item.VacancyProfileID), "--Select Vacancy Name--", new { @class = "form-control", required = "Required", tabindex = 9 })

                                    @*@Html.TextBoxFor(m => m.EmploymentTypeID, new { @class = "form-control" })*@
                                </div>
                            </div>
                            @*<div class="form-group">
                                @Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })
                                <div class="col-md-12">
                                    <label>Job Title</label>
                                    @Html.TextBoxFor(Model => @item.JobTitle, new { @class = "form-control", placeholder = "Job Title", required = "Required", tabindex = 3 })
                                </div>
                            </div>*@
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Job Level<span class="required" style="color:red;"> * </span></label>
                                    @*@Html.TextBoxFor(Model => @item.JobLevel, new { @class = "form-control", placeholder = "Job Level", required = "Required", tabindex = 4 })*@
                                    @Html.DropDownListFor(Model => @item.JobLevelID, new SelectList(ViewBag.JobLevel, "JobLevelID", "Descr", @item.JobLevelID), "--Select Job Level--", new { @class = "form-control", onchange = "SelectedIndexChanged()", id = "JobLevelID", required = "Required", tabindex = 9 })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Organisation<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(Model => @item.OrganisationID, new SelectList(ViewBag.Organisation, "OrganisationID", "OrganisationName", @item.OrganisationID), "--Select Organisation Type--", new { @class = "form-control", required = "Required", tabindex = 5 })
                                    @*@Html.TextBoxFor(m => @item.OrganisationID, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })*@

                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Division<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(Model => @item.DivisionID, new SelectList(ViewBag.Division, "DivisionID", "DivisionDiscription", @item.DivisionID), "--Select Division Type--", new { @class = "form-control", required = "Required", tabindex = 5 })
                                    @*@Html.TextBoxFor(m => m.Organisation, new { @class = "form-control", placeholder = "Organisation", tabindex = 5 })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Recruiter<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(Model => @item.Recruiter, new { @class = "form-control", placeholder = "Recruiter", required = "Required", tabindex = 6 })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Recruiter Email<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(Model => @item.RecruiterEmail, new { @class = "form-control", placeholder = "Recruiter Email", required = "Required", tabindex = 6 })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Recruiter's Telephone Number<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(Model => @item.RecruiterTel, new { @class = "form-control", placeholder = "Recruiter Email", required = "Required", tabindex = 6 })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @*<div class="form-group">
                @Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })
                <div class="col-md-12">
                    <label>Position</label>
                    @Html.TextBoxFor(Model => @item.Position, new { @class = "form-control", placeholder = "Position", required = "Required", tabindex = 7 })
                </div>
            </div>*@
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Reports To<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(Model => @item.Manager, new { @class = "form-control", placeholder = "Manager", required = "Required", tabindex = 8 })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Department<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(Model => @item.DepartmentID, new SelectList(ViewBag.SitaDepartment, "DepartmentID", "DepartmentDiscription", @item.DepartmentID), "--Select Department --", new { @class = "form-control", required = "Required", tabindex = 9 })

                                    @*@Html.TextBoxFor(m => m.EmploymentTypeID, new { @class = "form-control" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Employment Type<span class="required" style="color:red;"> * </span></label>
                                    @Html.DropDownListFor(Model => @item.EmploymentTypeID, new SelectList(ViewBag.EmploymentType, "EmploymentTypeID", "EmploymentType", @item.EmploymentTypeID), "--Select Employment Type--", new { @class = "form-control", onchange = "CheckContractDuration()", id = "EmploymentTypeID", required = "Required", tabindex = 9 })
                                    @*@Html.TextBoxFor(m => m.EmploymentTypeID, new { @class = "form-control" })*@
                                </div>
                            </div>
                            <div class="form-group" id="ConD">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Contract Duration</label>
                                    @Html.TextBoxFor(Model => @item.ContractDuration, new {@id = "ContractDuration", @class = "form-control", placeholder = "Contract Duration", tabindex = 10 })
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Salary Level<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(Model => @item.SalaryRange, new { @class = "form-control", @readonly = "readonly", placeholder = "Salary Range", required = "Required", tabindex = 10 })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Closing Date<span class="required" style="color:red;"> * </span></label>
                                    @Html.EditorFor(Model => @item.ClosingDate, new { htmlAttributes = new { @id = "ContractDuration", @class = "form-control datepicker", @type = "date", placeholder = "Closing Date", required = "Required", tabindex = 11 } })
                                    @*@Html.TextBoxFor(m => m.ClosingDate, new { @class = "form-control" })*@
                                    @*@Html.TextBoxFor(m => m.ClosingDate, new { @class = "form-control" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Number Of Openings<span class="required" style="color:red;"> * </span></label>
                                    @Html.TextBoxFor(Model => @item.NumberOfOpenings, new { @class = "form-control", required = "Required", placeholder = "Number Of Openings", tabindex = 12 })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <label>Vacancy Type</label>
                                    @Html.DropDownListFor(Model => @item.VancyTypeID, new SelectList(ViewBag.VacancyType, "VancyTypeID", "VacancyTypeName", @item.VancyTypeID), "--Select Vacancy Type--", new { @class = "form-control", onchange = "SelectedIndexChanged()", id = "VancyTypeID", required = "Required", tabindex = 9 })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <label>Location<span class="required" style="color:red;"> * </span></label>
                            @Html.TextBoxFor(Model => @item.Location, new { @class = "form-control", required = "Required", placeholder = "Location", tabindex = 12 })
                        </div>
                        <div class="col-md-12">
                            <label>Purpose of the Job</label>
                            @Html.TextAreaFor(Model => @item.VacancyPurpose, new { @class = "form-control", @readonly = "readonly", placeholder = "Purpose of the Job", tabindex = 13 })
                        </div>
                        <div class="col-md-12">
                            <label>Responsibilities</label>
                            @Html.TextAreaFor(Model => @item.Responsibility, new { @class = "form-control", @readonly = "readonly", placeholder = "Responsibility", required = "Required", tabindex = 13 })
                        </div>
                        <div class="col-md-12">
                            <label>Qualifications And Experience</label>
                            @Html.TextAreaFor(Model => @item.QualificationsandExperience, new { @class = "form-control", @readonly = "readonly", placeholder = "Qualifications and Experience", required = "Required", tabindex = 14 })
                        </div>
                        <div class="col-md-12">
                            <label>Technical Competencies Description</label>
                            @Html.TextAreaFor(Model => @item.TechnicalCompetenciesDescription, new { @class = "form-control", @readonly = "readonly", placeholder = "Technical Competencies Description", required = "Required", tabindex = 14 })
                        </div>
                        <div class="col-md-12">
                            <label>Additional Requirements</label>
                            @Html.TextAreaFor(Model => @item.OtherSpecialRequirements, new { @class = "form-control", @readonly = "readonly", placeholder = "Additional Requirements", required = "Required", tabindex = 15 })
                        </div>
                        <div class="col-md-12">
                            <label>Disclaimer</label>
                            @Html.TextAreaFor(Model => @item.Disclaimer, new { @class = "form-control", @readonly = "readonly", placeholder = "Disclaimer", required = "Required", tabindex = 16 })
                        </div>
                        <br />
                        <br />
                        <div class="clearfix"></div><br />
                        <div class="col-md-12">
                            <div class="box box-warning">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Question Banks<span class="required" style="color:red;"> * </span></h3>
                                </div>
                                <!-- /.box-header -->
                                <div class="box-body">
                                    @{
                                        int vid = @item.ID;
                                        var data = _db.tblVacancyQuestions.Where(p => p.VacancyID == vid).Select(x=>x.QuestionID).ToList();

                                     }
                         
                                    @if (ViewBag.QuetionBanks != null)
                                    {
                                        foreach (var d in ViewBag.QuetionBanks)
                                        {
                                            <div class="checkbox">
                                                <label>
                                                    @if (data.Contains(@d.QuestionID))
                                                    {
                                                        <input type="checkbox"
                                                               name="VacancyQuestionID" checked
                                                               value="@d.QuestionID" /> @d.QuestionDesc
                                                    }
                                                    else
                                                    {
                                                        <input type="checkbox"
                                                               name="VacancyQuestionID"
                                                               value="@d.QuestionID" /> @d.QuestionDesc
                                                    }


                                                   </label>
                                         </div>

                                        }

                                    }
                                    
                                </div>
                                <!-- /.box-body -->
                            </div>
                        </div>

                        <div class="clearfix"></div><br />
                        <div class="col-md-12 pull-right">
                            @*<input type="submit" value="Save Changed" class="btn btn-success btn-sm">*@
                            <button type="submit" id="sbtn" name="submit" class="btn btn-success btn-sm">
                                <span id="sid" class="fa fa-save"></span> Save Changed
                            </button>
                            <a href="@Url.Action("Index", "Vacancy" , new { id = @item.ID })" onclick="return confirm('Are you sure you want to go back to list?')" class="btn btn-info btn-sm">
                                <span class="fa fa-chevron-left" aria-hidden="true"></span>
                                Back to List
                            </a>
                            @*<input type="button" class="btn btn-success" value="Approve" /> |
                                <input type="button" class="btn btn-danger" value="Reject" /> |
                                <input type="button" class="btn btn-info" value="Back to List" />*@
                        </div>
                    </div>
                }


            }


        </div>
        <!-- /.box-body -->
        <div class="box-footer">
            &nbsp;
        </div>
        <!-- /.box-footer-->
    </div>
    <!-- /.box -->
</section>
<!-- /.content -->
<script type="text/javascript">
    $(document).ready(function () {

        CheckContractDuration();
    });

    function SelectedIndexChangedEmploymentType() {
        $(function () {
            $("#EmploymentTypeID").change(function () {
                var value = $(this).val();

                //alert(value);
                if (value == 1) {
                    $("#ContractDuration").show();
                }
                else {

                    $("#ContractDuration").hide();
                }

            })
        })
    }

    function CheckContractDuration() {
        var d = $("#EmploymentTypeID").val();
        if (d == 1) {
            $("#ConD").show();
        }
        else {
            $("#ConD").hide();
        }
    }
</script>

<script type="text/javascript">
    $('#item_VacancyProfileID').change(function () {
        //alert(" Ok");
        var vacancyProfile = $("#item_VacancyProfileID").val();
        var vacancyPurpose = $('#item_VacancyPurpose');
        var TechnicalCompetenciesDescription = $('#item_TechnicalCompetenciesDescription');
        var Responsibility = $('#item_Responsibility');
        var QualificationsandExperience = $('#item_QualificationsandExperience');
        var OtherSpecialRequirements = $('#item_OtherSpecialRequirements');
        var Disclaimer = $('#item_Disclaimer');

        $("#item_VacancyPurpose").val(null);
        $("#item_TechnicalCompetenciesDescription").val(null);
        $("#item_Responsibility").val(null);
        $("#item_QualificationsandExperience").val(null);
        $("#item_OtherSpecialRequirements").val(null);
        $("#item_Disclaimer").val(null);
        $("#item_TechnicalCompetenciesDescription").val(null);

            if (vacancyProfile != null && vacancyProfile != '') {
                $.getJSON('@Url.Action("GetVacancyDetailsByID")',
                    { vid: vacancyProfile }, function (data) {
                        if (data != null && !jQuery.isEmptyObject(data)) {
                            //console.log("Data: " + data);
                            $("#item_VacancyPurpose").val(data[0].VacancyPurpose);
                            $("#item_TechnicalCompetenciesDescription").val(data[0].TechnicalCompetenciesDescription);
                            $("#item_Responsibility").val(data[0].Responsibility);
                            $("#item_QualificationsandExperience").val(data[0].QualificationsandExperience);
                            $("#item_OtherSpecialRequirements").val(data[0].OtherSpecialRequirements);
                            $("#item_Disclaimer").val(data[0].Disclaimer);
                            $("#item_TechnicalCompetenciesDescription").val(data[0].TechnicalCompetenciesDescription);

                      }
                        else
                        {
                            $("#item_VacancyPurpose").val("Purpose of the Job");
                            //District.append($('<option/>', { value: null, text: "--Select District Municipality--" }));
                        };

                  });
            }
    });

    $('#JobLevelID').change(function () {
        var jobLevel = $("#JobLevelID").val();
        var salaryRange = $('#item_SalaryRange');

        $("#item_SalaryRange").val(null);

        if (jobLevel != null && jobLevel != '') {
            $.getJSON('@Url.Action("GetSalaryRangeByID")',
                { vid: jobLevel }, function (data) {
                    if (data != null && !jQuery.isEmptyObject(data)) {
                        $("#item_SalaryRange").val(data[0].SalaryRange);

                    }
                    else {
                        $("#item_SalaryRange").val("Salary Range");
                    };

                });
        }
    });

    function datediff() {


        var selectedText = document.getElementById("ClosingDate").value;
        var selectedDate = new Date(selectedText);
        var now = new Date();
        if (selectedDate < now) {
            //$('#modal-warning').modal('show')
            document.getElementById('ClosingDate').value = '';
            alert("Closing Date Cannot Be In The Past. Please Select Future Date.");

        }
    }
</script>

