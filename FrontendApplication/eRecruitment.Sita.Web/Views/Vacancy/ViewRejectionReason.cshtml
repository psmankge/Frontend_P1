@model IEnumerable<eRecruitment.Sita.Web.Models.VacancyModels>
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "ViewRejectionReason";
}
@using System.Data.Linq
@{
    eRecruitment.Sita.Web.App_Data.DAL.eRecruitmentDataClassesDataContext _db =
        new eRecruitment.Sita.Web.App_Data.DAL.eRecruitmentDataClassesDataContext();
}
<section class="content-header">
    <h1>
        &nbsp;
        @*Blank page*@
        @*<small>it all starts here</small>*@
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="#">Vacancy</a></li>
        @*<li class="active">View Vacancy for Rejection</li>*@
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="box">
        <div class="box-header with-border">            
            <h3 class="box-title">View Reason For Rejection</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                        title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            @foreach (var item in Model)
            {
                using (Html.BeginForm("ViewRejectionReason", "Vacancy", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <div class="row">
                        @*<br /><div class="clearfix"></div><br />*@
                        <div class="col-md-12">
                            <div class="box box-solid">
                                <div class="box-header with-border">
                                    <i class="fa fa-text-width"></i>
                                    <h3 class="box-title">Reason</h3>
                                </div>
                                <!-- /.box-header -->
                                <div class="box-body">

                                    @{int vacid = @item.ID;

                                        var Reason = _db.tblVacancyRejectionReasons.Where(x => x.fkVacancyID == vacid).OrderByDescending(x => x.CreationDate); ;
                                        <blockquote>
                                            @foreach (var d in Reason)
                                            {

                                                <p>@d.RejectionReasonOther - @d.CreationDate</p>
                                                <small>Vacancy posted by @item.Recruiter  <cite title="Source Title"></cite></small>
                                            }
                                        </blockquote>
                                    }
                                   
</div>
                                <!-- /.box-body -->
                            </div>                   
                            <!-- /.box -->
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.ReferenceNo, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Reference Number</label>
                                    @Html.TextBoxFor(m => @item.ReferenceNo, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Job Title</label>
                                    @Html.DropDownListFor(m => @item.VacancyProfileID, new SelectList(ViewBag.VacancyProfile, "VacancyProfileID", "VacancyName", @item.VacancyProfileID), "--Select Vacancy Name--", new { @class = "form-control", disabled = "disabled", @readonly = "readonly", tabindex = 5 })
                                </div>
                            </div>
                            @*<div class="form-group">
                                @Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })
                                <div class="col-md-12">
                                    <label>Job Title</label>
                                    @Html.TextBoxFor(m => @item.JobTitle, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                </div>
                            </div>*@
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Job Level</label>
                                    @Html.TextBoxFor(m => @item.JobLevel, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Organisation</label>
                                    @Html.DropDownListFor(m => @item.OrganisationID, new SelectList(ViewBag.Organisation, "OrganisationID", "OrganisationName", @item.OrganisationID), "--Select Organisation Type--", new { @class = "form-control", disabled = "disabled", @readonly = "readonly", tabindex = 5 })
                                    @*@Html.TextBoxFor(m => @item.OrganisationID, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Division</label>
                                    @Html.DropDownListFor(m => @item.DivisionID, new SelectList(ViewBag.Division, "DivisionID", "DivisionDiscription", @item.DivisionID), "--Select Division--", new { @class = "form-control", disabled = "disabled", @readonly = "readonly", tabindex = 5 })
                                    @*@Html.TextBoxFor(m => @item.OrganisationID, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Recruiter</label>
                                    @Html.TextBoxFor(m => @item.Recruiter, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Reports To</label>
                                    @Html.TextBoxFor(m => @item.Manager, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Sita Department</label>
                                    @Html.DropDownListFor(m => @item.DepartmentID, new SelectList(ViewBag.SitaDepartment, "DepartmentID", "DepartmentDiscription", @item.DepartmentID), "--Select Employment Type--", new { @class = "form-control", disabled = "disabled", @readonly = "readonly", tabindex = 1 })
                                    @*@Html.TextBoxFor(m => m.EmploymentTypeID, new { @class = "form-control" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Employment Type</label>
                                    @Html.DropDownListFor(m => @item.EmploymentTypeID, new SelectList(ViewBag.EmploymentType, "EmploymentTypeID", "EmploymentType", @item.EmploymentTypeID), "--Select Employment Type--", new { @class = "form-control", disabled = "disabled", @readonly = "readonly", tabindex = 1 })
                                    @*@Html.TextBoxFor(m => m.EmploymentTypeID, new { @class = "form-control" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Contract Duration</label>
                                    @Html.TextBoxFor(m => @item.ContractDuration, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                    @*@Html.TextBoxFor(m => m.EmploymentTypeID, new { @class = "form-control" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Salary</label>
                                    @Html.TextBoxFor(m => @item.Salary, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })*@
                                <div class="col-md-12">
                                    <label>Closing Date</label>
                                    @Html.EditorFor(model => @item.ClosingDate, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control datepicker", disabled = "disabled", @readonly = "readonly", @type = "date", placeholder = "Closing Date", tabindex = 7 } })
                                    @*@Html.TextBoxFor(m => m.ClosingDate, new { @class = "form-control" })*@
                                </div>
                            </div>
                            @*<div class="form-group">
                                    @Html.LabelFor(m => m.VacancyName, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-12">
                                        <label>Location</label>
                                        @Html.TextBoxFor(m => @item.Location, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                    </div>
                                </div>*@
                            @*<div class="form-group">
                                    <div class="col-md-offset-2 col-md-10 pull-right">
                                        <input type="submit" class="btn btn-success" value="Submit" />
                                        <input type="button" class="btn btn-danger" value="Cancel" />
                                    </div>
                                </div>*@
                        </div>
                    </div>
                    <div class="row">
                        @*<div class="col-md-12">
                                <label>Recruiter's Email Address</label>
                                @Html.TextAreaFor(m => @item.RecruiterEmail, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                            </div>
                            <div class="col-md-12">
                                <label>Purpose of the Job</label>
                                @Html.TextAreaFor(m => @item.VacancyPurpose, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                            </div>
                            <div class="col-md-12">
                                <label>Responsibilities</label>
                                @Html.TextAreaFor(m => @item.Responsibility, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                            </div>
                            <div class="col-md-12">
                                <label>Qualifications And Experience</label>
                                @Html.TextAreaFor(m => @item.QualificationsandExperience, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                            </div>
                            <div class="col-md-12">
                                <label>Technical Competencies Description</label>
                                @Html.TextAreaFor(m => @item.TechnicalCompetenciesDescription, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                            </div>
                            <div class="col-md-12">
                                <label>Additional Requirements</label>
                                @Html.TextAreaFor(m => @item.OtherSpecialRequirements, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                            </div>
                            <div class="col-md-12">
                                <label>Disclaimer</label>
                                @Html.TextAreaFor(m => @item.Disclaimer, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                            </div>*@
              

                        <br /><div class="clearfix"></div><br />
                        <div class="col-md-12">
                            <div class="box box-primary">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Supporting Documents</h3>
                                </div>
                                <!-- /.box-header -->
                                <!-- form start -->
                                <form role="form">
                                    <div class="box-body">
                                        @{
                                            int vacancyid = @item.ID;
                                            var doc = _db.tblVacancyDocuments.Where(x => x.fkVacancyID == vacancyid).ToList();
                                            <table id="example1" class="table table-bordered table-striped">
                                                <thead>
                                                    <tr>
                                                        <th class="col-md-11">Document Name</th>
                                                        <th class="col-md-1">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var d in doc)
                                                    {
                                                        <tr>
                                                            <td>@d.sFileName</td>
                                                            <td>
                                                                <div class="hidden-sm hidden-xs btn-group">
                                                                    <a class="btn btn-xs btn-success btn-xs" href='@Url.Action("DownLoadFile", "Vacancy", new { id = @d.id })' data-toggle="tooltip" data-placement="left" title="Download file">
                                                                        <i class="ace-icon fa fa-download bigger-120"> Download</i>
                                                                    </a>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>

                                        }

                                    </div>
                                    <!-- /.box-body -->

                                </form>
                            </div>
                        </div>
                        <div class="clearfix"></div><br />
                        <div class="col-md-12 pull-right">
                            <a href="@Url.Action("EditVacancy", "Vacancy", new { id = @item.ID })" class="btn btn-success btn-sm">
                                <span class="fa fa-check" aria-hidden="true"></span>
                                Edit
                            </a>
                            <a href="@Url.Action("Index", "Vacancy", new { id = @item.ID })" class="btn btn-info btn-sm">
                                <span class="fa fa-chevron-left" aria-hidden="true"></span>
                                Back to List
                            </a>
                      
                        </div>
                    </div>
                                    }

                          }
        </div>
        <!-- /.box-body -->
        <div class="box-footer">
            &nbsp;
        </div>
        <!-- /.box-footer-->
    </div>
    <!-- /.box -->
</section>
<!-- /.content -->
<script type="text/javascript">
    function GetVacancyID(d) {
        document.getElementById("hdnVacancyID").value = d;
        $('hdnVacancyID').val(d);
        alert(d);
    }
</script>
